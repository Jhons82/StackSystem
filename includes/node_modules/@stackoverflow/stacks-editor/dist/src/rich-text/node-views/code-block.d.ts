import { Node as ProsemirrorNode } from "prosemirror-model";
import { EditorView, NodeView } from "prosemirror-view";
/**
 * View with <code> wrapping/decorations for code_block nodes
 */
export declare class CodeBlockView implements NodeView {
    dom: HTMLElement | null;
    contentDOM?: HTMLElement | null;
    private node;
    private view;
    private getPos;
    private availableLanguages;
    private maxSuggestions;
    private ignoreBlur;
    private selectedSuggestionIndex;
    constructor(node: ProsemirrorNode, view: EditorView, getPos: () => number, availableLanguages: string[], maxSuggestions?: number);
    private render;
    update(node: ProsemirrorNode): boolean;
    /** Gets the codeblock language from the node */
    private getLanguageDisplayName;
    private updateNodeAttrs;
    private onLanguageSelectorClick;
    private onLanguageSelectorMouseDown;
    private onLanguageInputBlur;
    private onLanguageInputKeyDown;
    private onEscape;
    private onArrowUp;
    private onArrowDown;
    private updateSelectedSuggestionIndex;
    private onLanguageInputMouseDown;
    private onLanguageInputTextInput;
    private renderDropdown;
}
