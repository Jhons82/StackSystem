import { EditorState, Transaction } from "prosemirror-state";
/**
 * Indents selected line(s) within a code block
 * @param state The current editor state
 * @param dispatch The dispatch function to use
 * @internal
 */
export declare function indentCodeBlockLinesCommand(state: EditorState, dispatch: (tr: Transaction) => void): boolean;
/**
 * Unindents selected line(s) within a code block if able
 * @param state The current editor state
 * @param dispatch The dispatch function to use
 * @internal
 */
export declare function unindentCodeBlockLinesCommand(state: EditorState, dispatch: (tr: Transaction) => void): boolean;
/**
 * Toggle a code block on/off for the selection, merging multiple blocks.
 *
 * - If selection is collapsed, expand it to the entire parent block (so we don't split a paragraph).
 * - If selection covers part or all of multiple blocks, expand to cover those entire blocks.
 * - If every touched block is a code_block, merge them into one paragraph (with `hard_break`).
 * - Otherwise, merge them into a single code block, separating blocks by "\n".
 */
export declare function toggleCodeBlock(): (state: EditorState, dispatch?: (tr: Transaction) => void) => boolean;
export declare function toggleInlineCode(state: EditorState, dispatch?: (tr: Transaction) => void): boolean;
export declare function openCodeBlockLanguagePicker(state: EditorState, dispatch: (tr: Transaction) => void): boolean;
